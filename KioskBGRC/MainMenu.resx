<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>